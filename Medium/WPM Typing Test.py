import cursesfrom curses import wrapperimport timeimport randomdef start_screen(stdscr):    stdscr.clear()    stdscr.addstr("Welcome to the Speed Typing Test!\n")    stdscr.addstr("Press any key to begin!..")    stdscr.refresh()    stdscr.getkey()def display_text(stdscr, target, current, wpm=0):    stdscr.addstr(0, 0, f"WPM: {wpm}", curses.color_pair(3))    stdscr.addstr(2, 0, target, curses.color_pair(3))    for i, char in enumerate(current):        correct_char = target[i]        color = curses.color_pair(1)        if char != correct_char:            color = curses.color_pair(2)        stdscr.addstr(2, i, char, color)def load_text():    try:        with open("text.text", "r") as f:            lines = f.readlines()            if lines:                return random.choice(lines).strip()            else:                return "Sample text for speed typing test."    except FileNotFoundError:        return "Sample text for speed typing test."def wpm_test(stdscr):    target_text = load_text()    current_text = []    wpm = 0    start_time = time.time()    stdscr.nodelay(True)    while True:        time_elapsed = max(time.time() - start_time, 1)        wpm = round((len(current_text) / (time_elapsed / 60)) / 5)        stdscr.clear()        display_text(stdscr, target_text, current_text, wpm)        stdscr.refresh()        if "".join(current_text) == target_text:            stdscr.nodelay(False)            break        try:            key = stdscr.getkey()        except:            continue        if key == '27':  # Escape key            break        elif key in (curses.KEY_BACKSPACE, '\b', '\x7f'):  # Backspace key            if current_text:                current_text.pop()        elif len(key) == 1 and len(current_text) < len(target_text):  # Normal printable characters and within target length            current_text.append(key)def main(stdscr):    curses.curs_set(0)  # Hide cursor    curses.init_pair(1, curses.COLOR_GREEN, curses.COLOR_BLACK)    curses.init_pair(2, curses.COLOR_RED, curses.COLOR_BLACK)    curses.init_pair(3, curses.COLOR_WHITE, curses.COLOR_BLACK)    start_screen(stdscr)    while True:        wpm_test(stdscr)        stdscr.addstr(4, 0, "You completed the text! Press any key to continue or ESC to quit...")        key = stdscr.getkey()        if ord(key) == 27:            breakwrapper(main)